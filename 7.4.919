To: vim_dev@googlegroups.com
Subject: Patch 7.4.919
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.4.919
Problem:    The dll options are not in the options window.
Solution:   Add the dll options.  And other fixes.
Files:	    runtime/optwin.vim


*** ../vim-7.4.918/runtime/optwin.vim	2015-07-17 14:16:49.854596682 +0200
--- runtime/optwin.vim	2015-11-10 19:27:27.263818531 +0100
***************
*** 1,7 ****
  " These commands create the option window.
  "
  " Maintainer:	Bram Moolenaar <Bram@vim.org>
! " Last Change:	2013 Jun 29
  
  " If there already is an option window, jump to that one.
  if bufwinnr("option-window") > 0
--- 1,7 ----
  " These commands create the option window.
  "
  " Maintainer:	Bram Moolenaar <Bram@vim.org>
! " Last Change:	2015 Nov 10
  
  " If there already is an option window, jump to that one.
  if bufwinnr("option-window") > 0
***************
*** 149,155 ****
  call append(0, '" Each "set" line shows the current value of an option (on the left).')
  call append(1, '" Hit <CR> on a "set" line to execute it.')
  call append(2, '"            A boolean option will be toggled.')
! call append(3, '"            For other options you can edit the value.')
  call append(4, '" Hit <CR> on a help line to open a help window on this option.')
  call append(5, '" Hit <CR> on an index line to jump there.')
  call append(6, '" Hit <Space> on a "set" line to refresh it.')
--- 149,155 ----
  call append(0, '" Each "set" line shows the current value of an option (on the left).')
  call append(1, '" Hit <CR> on a "set" line to execute it.')
  call append(2, '"            A boolean option will be toggled.')
! call append(3, '"            For other options you can edit the value before hitting <CR>.')
  call append(4, '" Hit <CR> on a help line to open a help window on this option.')
  call append(5, '" Hit <CR> on an index line to jump there.')
  call append(6, '" Hit <Space> on a "set" line to refresh it.')
***************
*** 606,611 ****
--- 606,615 ----
      call append("$", "guiheadroom\troom (in pixels) left above/below the window")
      call append("$", " \tset ghr=" . &ghr)
    endif
+   if has("directx")
+     call append("$", "renderoptions\toptions for text rendering")
+     call <SID>OptionG("rop", &rop)
+   endif
    call append("$", "guipty\tuse a pseudo-tty for I/O to external commands")
    call <SID>BinOptionG("guipty", &guipty)
    if has("browse")
***************
*** 701,706 ****
--- 705,712 ----
  call <SID>BinOptionG("eb", &eb)
  call append("$", "visualbell\tuse a visual bell instead of beeping")
  call <SID>BinOptionG("vb", &vb)
+ call append("$", "belloff\tdo not ring the bell for these reasons")
+ call <SID>OptionG("belloff", &belloff)
  if has("multi_lang")
    call append("$", "helplang\tlist of preferred languages for finding help")
    call <SID>OptionG("hlg", &hlg)
***************
*** 724,729 ****
--- 730,736 ----
  
  call <SID>Header("editing text")
  call append("$", "undolevels\tmaximum number of changes that can be undone")
+ call append("$", "\t(global or local to buffer)")
  call append("$", " \tset ul=" . &ul)
  call append("$", "undoreload\tmaximum number lines to save for undo on a buffer reload")
  call append("$", " \tset ur=" . &ur)
***************
*** 949,955 ****
  call append("$", "endofline\tlast line in the file has an end-of-line")
  call append("$", "\t(local to buffer)")
  call <SID>BinOptionL("eol")
! call append("$", "fixeol\tfixes missing end-of-line at end of text file")
  call append("$", "\t(local to buffer)")
  call <SID>BinOptionL("fixeol")
  if has("multi_byte")
--- 956,962 ----
  call append("$", "endofline\tlast line in the file has an end-of-line")
  call append("$", "\t(local to buffer)")
  call <SID>BinOptionL("eol")
! call append("$", "fixendofline\tfixes missing end-of-line at end of text file")
  call append("$", "\t(local to buffer)")
  call <SID>BinOptionL("fixeol")
  if has("multi_byte")
***************
*** 976,981 ****
--- 983,989 ----
  call append("$", "backupskip\tpatterns that specify for which files a backup is not made")
  call append("$", " \tset bsk=" . &bsk)
  call append("$", "backupcopy\twhether to make the backup as a copy or rename the existing file")
+ call append("$", "\t(global or local to buffer)")
  call append("$", " \tset bkc=" . &bkc)
  call append("$", "backupdir\tlist of directories to put backup files in")
  call <SID>OptionG("bdir", &bdir)
***************
*** 1191,1198 ****
    call <SID>OptionL("kmp")
  endif
  if has("langmap")
!   call append("$", "langmap\ttranslate characters for Normal mode")
    call <SID>OptionG("lmap", &lmap)
  endif
  if has("xim")
    call append("$", "imdisable\twhen set never use IM; overrules following IM options")
--- 1199,1208 ----
    call <SID>OptionL("kmp")
  endif
  if has("langmap")
!   call append("$", "langmap\tlist of characters that are translated in Normal mode")
    call <SID>OptionG("lmap", &lmap)
+   call append("$", "langnoremap\tdon't apply 'langmap' to mapped characters")
+   call <SID>BinOptionG("lnr", &lnr)
  endif
  if has("xim")
    call append("$", "imdisable\twhen set never use IM; overrules following IM options")
***************
*** 1297,1302 ****
--- 1307,1328 ----
    call append("$", "mzquantum\tinterval in milliseconds between polls for MzScheme threads")
    call append("$", " \tset mzq=" . &mzq)
  endif
+ if exists("&luadll")
+   call append("$", "luadll\tname of the Lua dynamic library")
+   call <SID>OptionG("luadll", &luadll)
+ endif
+ if exists("&perldll")
+   call append("$", "perldll\tname of the Perl dynamic library")
+   call <SID>OptionG("perldll", &perldll)
+ endif
+ if exists("&pythondll")
+   call append("$", "pythondll\tname of the Python 2 dynamic library")
+   call <SID>OptionG("pythondll", &pythondll)
+ endif
+ if exists("&pythonthreedll")
+   call append("$", "pythonthreedll\tname of the Python 3 dynamic library")
+   call <SID>OptionG("pythonthreedll", &pythonthreedll)
+ endif
  
  set cpo&vim
  
*** ../vim-7.4.918/src/version.c	2015-11-10 19:41:30.519462341 +0100
--- src/version.c	2015-11-10 19:45:40.060988233 +0100
***************
*** 743,744 ****
--- 743,746 ----
  {   /* Add new patch number below this line */
+ /**/
+     919,
  /**/

-- 
The primary purpose of the DATA statement is to give names to constants;
instead of referring to pi as 3.141592653589793 at every appearance, the
variable PI can be given that value with a DATA statement and used instead
of the longer form of the constant.  This also simplifies modifying the
program, should the value of pi change.
	-- FORTRAN manual for Xerox Computers

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
